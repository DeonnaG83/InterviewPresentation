package com.perscholas.homeinsurance.dao;

import java.io.IOException; 

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

import com.perscholas.homeinsurance.interfaces.UserDAOI;
import com.perscholas.homeinsurance.models.Policy;
import com.perscholas.homeinsurance.models.Property;
import com.perscholas.homeinsurance.models.Quote;

import java.io.IOException; 

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

import com.perscholas.homeinsurance.interfaces.UserDAOI;
import com.perscholas.homeinsurance.models.User;

public class PolicyDAO  
{
	/**Returns the quote identification number autogenerated by the database during insertion.
	 *@param user Represents an initialized Quote Object to be inserted into the database.
	 *@return Returns the quote identification number.
	 *@throws SQLException
	 *@throws ClassNotFoundException
	 *@throws IOException
	*/
	
	public Integer registerPolicy(Policy policy) throws SQLException, ClassNotFoundException, IOException 
	{
		//Declare all variables
		//Create Connection, PreparedStatement, and ResultSet Objects and
		//initialize to null. Create an OracleConnection Object with Java default Constructor.
		Connection conn = null;			
		PreparedStatement stmt = null;	
		ResultSet rs = null;			
		OracleConnection orcl= new OracleConnection();	
		
		// Assign query statement (SQL) to String variable
		String insertString = "insert into policies (quote_id, user_id, effective_date, end_date," + 
				              "term, policy_status) values (?,?,?,?,?,?)";
		
		//Assign column id value to String array for auto generated keys
		String[] COL = {"policy_id"};
		int ID = -1;
	    
		//Assign value to Connection Object using getConnection
		//method from OracleConnection Class.
	    conn = orcl.getConnection();  
		System.out.println("DATABASE CONNECTION ESTABLISHED");
	   
	    try
		{
	    	//Initialize Statement Object with passing of query and column id 
	    	//Initialize Statement Object with column index and value to be inserted into the column
	        stmt = conn.prepareStatement(insertString, COL);
	        
	        stmt.setInt(1, policy.getQuoteId());
	        stmt.setFloat(2, policy.getUserId());
	        stmt.setDate(3, policy.getEffectiveDate());
	        stmt.setDate(4, policy.getEndDate());
	        stmt.setInt(5, policy.getTerm());
	        stmt.setString(6, policy.getPolicyStatus());
	        
	        
	        //Execute query
	        stmt.executeUpdate();
	       
	        //Assign returned values to ResultSet Object.
	        rs = stmt.getGeneratedKeys();
	        if(rs != null && rs.next()) 
	        {
	            ID = rs.getInt(1);
	            policy.setPolicyId(ID);
	            System.out.println("The policy has been registered as Policy ID#: "+ID);
	        }
	    }
	    catch (SQLException e)
		{
			System.out.println("Error: " + e.getMessage());
		}
		finally
		{
			//Close all database access Objects
			if (rs != null) 
			{
				rs.close();
			}
			if (stmt != null) 
			{
				stmt.close();
			}
			if (conn != null) 
			{
				conn.close();
			}
		}
	    
		return ID;
	}}
	
	
	/**Returns a Quote Object retrieved from the database based on the quote identification number passed.
	 *@param user_id Represents the user identification number.
	 *@return Returns List containing User Object matching passed user_id variable.
	 *@throws SQLException
	 *@throws ClassNotFoundException
	 *@throws IOException
	*/
//	public Policy getPolicyByUserId(int userId) throws ClassNotFoundException, IOException, SQLException
//	{
//		Connection conn = null;
//		PreparedStatement stmt = null;
//		ResultSet rs = null;
//		OracleConnection orcl = new OracleConnection();
//		Quote quote = null;
//		Policy poloicy = null;
//		
//		String fetchString = "SELECT quotes.quote_Id, quotes.monthly_premium, quotes.dwelling_coverage, quotes.detached_structures,"+
//				"quotes.personal_property, quotes.add_living_exp, quotes.medical_expenses, quotes.deductable FROM quotes Inner Join Properties ON"
//				+ "properties.location_Id = quotes.location_id WHERE quotes.location_Id = ?";
//		try
//		{
//			conn = orcl.getConnection();
//			stmt = conn.prepareStatement(fetchString);
//			stmt.setInt(1, userId);
//			rs = stmt.executeQuery();
//			
//			while(rs.next())
//			{
//				property = new Property();
//				property.setLocationId(rs.getInt(1));
//				property.setMarketValue(rs.getFloat(2));
//				property.setYearBuilt(rs.getInt(3));
//				property.setSquareFootage(rs.getInt(4));
//				property.setDwellingType(rs.getString(5));
//				property.setRoofMaterial(rs.getString(6));
//				property.setGarageType(rs.getString(7));
//				property.setFullBaths(rs.getInt(8));
//				property.setHalfBaths(rs.getInt(9));
//				property.setPool(rs.getBoolean(10));
//				
//				quote = new Quote(property, rs.getFloat(12), rs.getFloat(13), rs.getFloat(14), rs.getFloat(15), rs.getFloat(16), rs.getFloat(17), rs.getFloat(18));
//				quote.setQuoteId(rs.getInt(11));
//			}
//		}
//		catch(SQLException e)
//		{
//			System.out.println("Error: " + e.getMessage());
//		}
//		finally
//		{
//			if (rs != null) 
//			{
//				rs.close();
//			}
//			if (stmt != null) 
//			{
//				stmt.close();
//			}
//			if (conn != null) 
//			{
//				conn.close();
//			}
//		}
//		return policy;
//	}
//	}